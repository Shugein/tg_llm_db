from aiogram import Router, F
from aiogram.types import CallbackQuery
from loguru import logger

from ..keyboards.inline import get_main_menu, get_settings_menu, get_model_selection_menu, get_confirm_clear_menu
from ..services.context import ConversationManager

router = Router(name="callbacks")

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è ConversationManager (–±—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –≤ main.py)
conversation_manager: ConversationManager = None

@router.callback_query(F.data == "main_menu")
async def callback_main_menu(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    await callback.answer()
    
    welcome_text = f"""
ü§ñ <b>AI Bot - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
‚Ä¢ ‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b> - –∏–∑–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å –∏ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã  
‚Ä¢ üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b> - –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
‚Ä¢ üÜò <b>–ü–æ–º–æ—â—å</b> - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
‚Ä¢ üßπ <b>–û—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç</b> - –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥

<i>–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å AI!</i>
"""
    
    await callback.message.edit_text(
        welcome_text,
        reply_markup=get_main_menu()
    )

@router.callback_query(F.data == "settings")
async def callback_settings(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    await callback.answer()
    
    settings_text = """
‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞</b>

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞ –ø–æ–¥ —Å–≤–æ–∏ –Ω—É–∂–¥—ã:

‚Ä¢ ü§ñ <b>–í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å</b> - –≤—ã–±–æ—Ä AI –º–æ–¥–µ–ª–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤
‚Ä¢ üéØ <b>–†–µ–∂–∏–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏</b> - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª—è –æ—Ç–≤–µ—Ç–æ–≤

<i>–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –æ–ø—Ü–∏—é:</i>
"""
    
    await callback.message.edit_text(
        settings_text,
        reply_markup=get_settings_menu()
    )

@router.callback_query(F.data == "select_model")
async def callback_select_model(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏"""
    await callback.answer()
    
    model_text = """
ü§ñ <b>–í—ã–±–æ—Ä AI –º–æ–¥–µ–ª–∏</b>

–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:

‚Ä¢ <b>GPT-4o</b> - —Å–∞–º–∞—è –º–æ—â–Ω–∞—è –º–æ–¥–µ–ª—å OpenAI
‚Ä¢ <b>GPT-4o Mini</b> - –±—ã—Å—Ç—Ä–∞—è –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è –º–æ–¥–µ–ª—å 
‚Ä¢ <b>Claude 3.5 Sonnet</b> - –º–æ–¥–µ–ª—å –æ—Ç Anthropic
‚Ä¢ <b>Gemini Pro</b> - –º–æ–¥–µ–ª—å –æ—Ç Google
‚Ä¢ <b>Llama 3.1 70B</b> - –æ—Ç–∫—Ä—ã—Ç–∞—è –º–æ–¥–µ–ª—å –æ—Ç Meta

<i>–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:</i>
"""
    
    await callback.message.edit_text(
        model_text,
        reply_markup=get_model_selection_menu()
    )

@router.callback_query(F.data.startswith("model:"))
async def callback_model_selected(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –º–æ–¥–µ–ª–∏"""
    model_id = callback.data.split(":", 1)[1]
    await callback.answer(f"–ú–æ–¥–µ–ª—å {model_id} –≤—ã–±—Ä–∞–Ω–∞!")
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ Redis
    
    await callback.message.edit_text(
        f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ –º–æ–¥–µ–ª—å: <code>{model_id}</code>\n\n"
        "–ú–æ–¥–µ–ª—å –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.",
        reply_markup=get_settings_menu()
    )

@router.callback_query(F.data == "clear_context")
async def callback_clear_context(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—á–∏—Å—Ç–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞"""
    await callback.answer()
    
    confirm_text = """
üßπ <b>–û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∏–∞–ª–æ–≥–∞</b>

–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞? 

–ü–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ –±–æ—Ç –∑–∞–±—É–¥–µ—Ç –≤–µ—Å—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –∏ –Ω–∞—á–Ω–µ—Ç –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥ —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞.

<i>–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!</i>
"""
    
    await callback.message.edit_text(
        confirm_text,
        reply_markup=get_confirm_clear_menu()
    )

@router.callback_query(F.data == "confirm_clear")
async def callback_confirm_clear(callback: CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞"""
    await callback.answer("–ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—á–∏—â–µ–Ω!")
    
    user_id = callback.from_user.id
    
    # –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –µ—Å–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
    if conversation_manager:
        try:
            await conversation_manager.clear_context(user_id)
            logger.info(f"Context cleared for user {user_id}")
        except Exception as e:
            logger.error(f"Failed to clear context for user {user_id}: {e}")
    
    await callback.message.edit_text(
        "‚úÖ <b>–ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–∏–∞–ª–æ–≥–∞ –æ—á–∏—â–µ–Ω!</b>\n\n"
        "–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥. "
        "–ë–æ—Ç –∑–∞–±—ã–ª –≤—Å—é –ø—Ä–µ–¥—ã–¥—É—â—É—é –∏—Å—Ç–æ—Ä–∏—é —Ä–∞–∑–≥–æ–≤–æ—Ä–∞.",
        reply_markup=get_main_menu()
    )

@router.callback_query(F.data == "stats")
async def callback_stats(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    await callback.answer()
    
    user_id = callback.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    context_info = {"message_count": 0, "oldest_message": None, "newest_message": None}
    if conversation_manager:
        try:
            context_info = await conversation_manager.get_context_summary(user_id)
        except Exception as e:
            logger.error(f"Failed to get context summary for user {user_id}: {e}")
    
    stats_text = f"""
üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</b>

<b>–¢–µ–∫—É—â–∞—è —Å–µ—Å—Å–∏—è:</b>
‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ: {context_info['message_count']}
‚Ä¢ –ù–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞: {context_info['oldest_message'] or '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}
‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {context_info['newest_message'] or '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}

<b>–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤: –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ
‚Ä¢ –õ—é–±–∏–º–∞—è –º–æ–¥–µ–ª—å: –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ

<i>–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö.</i>
"""
    
    await callback.message.edit_text(
        stats_text,
        reply_markup=get_main_menu()
    )

@router.callback_query(F.data == "help")
async def callback_help(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–ø—Ä–∞–≤–∫–∏"""
    await callback.answer()
    
    help_text = """
üÜò <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å AI
‚Ä¢ –ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–∏–∞–ª–æ–≥–∞
‚Ä¢ –î–æ—Å—Ç—É–ø–Ω—ã —Ä–∞–∑–ª–∏—á–Ω—ã–µ AI –º–æ–¥–µ–ª–∏ –Ω–∞ –≤—ã–±–æ—Ä

<b>–ö–æ–º–∞–Ω–¥—ã:</b>
‚Ä¢ /start - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
‚Ä¢ /help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
‚Ä¢ /settings - –æ—Ç–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
‚Ä¢ /clear - –æ—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–∏–∞–ª–æ–≥–∞

<b>–°–æ–≤–µ—Ç—ã:</b>
‚Ä¢ –î–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã —á–µ—Ç–∫–æ
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Ç–µ–º—ã —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
‚Ä¢ –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å —Ä–∞–∑–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏

<b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b>
–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
"""
    
    await callback.message.edit_text(
        help_text,
        reply_markup=get_main_menu()
    )